export * from './format';
export * from './history';
export * from './util';
export declare class Time2Blocks {
    private isOnline;
    private static instance;
    static getInstance(isOnline?: boolean, newInstance?: Time2Blocks): Time2Blocks;
    loading: Promise<number> | null;
    private readonly historyService;
    private readonly formatService;
    constructor(isOnline: boolean);
    getFromTimestamp(timestamp: number): Promise<number | null>;
    private loadFromTimestamp;
    private getBlockWithDateFromIndexedBlock;
    getBlockFromTimestamp(timestamp: number): {
        block: number;
    } | {
        blockA: number;
        blockB: number;
    };
    format(block: number, format: string, numberSeparator?: string): string;
    /**
     * using the timestamp passed by parameter, it searches the indexed timestamps,
     * those with the associated block number, and then delivers the timestamp
     * closest to the parameter that is indexed
     *
     * @param timestamp reference
     * @param times array with all indexed timestamp
     *
     * @returns indexed timestamp closest to the timestamp parameter
     */
    private getTimeIndexedFromTime;
    private getIndexedBlocksAroundBlock;
    offline(): void;
}
